
pipeline {
    agent any
    
    environment {
        ang_dir = 'angular'
        java_dir = 'java/jtqj'
        src_dir = 'angular/src'
        sonarEnv = "sonarqube"
        scannerHome = "sonarqube"
    }
    tools{
        maven 'mvn'
        nodejs 'NodeJs'
    }
    stages {        
        //separar install y build 
        stage('Install dependencies') {
            steps {
                dir(ang_dir){
                    //sh 'yarn --network-timeout 100000'
                    sh 'npm install'
                }
            }
        }
        /*
        stage('Test front') {
            steps {
                dir(ang_dir){
                    sh 'ng test --code-coverage' 
                    sh 'ng lint'
                }
            }
        }
        */
        stage('SonarQube Analysis Front') {
            steps{
                script {
                    dir(ang_dir) {
                        
                        withSonarQubeEnv(sonarEnv) {
                            sh """
                                ${scannerHome}/bin/sonar.sh \
                                    -Dsonar.projectKey=jtqangular \
                                    -Dsonar.projectName=jtqangular \
                                    -Dsonar.sources=${src_dir}
                            """
                        }
                    }
                }
            }
        }
        
        /*
        stage('Build frontend') {
            steps {
                dir(ang_dir){
                    sh 'npm run build'
                }
            }
        }
        */
        stage('Build backend') {
            steps {
                dir(java_dir){
                    sh 'mvn clean install -Dmaven.test.skip=true'
                    }
                }
            
        }
        stage('Test backend') {
            steps {
                dir(java_dir){
                    sh 'mvn clean test'
                }
            }
        }   

        stage('SonarQube Analysis Back') {
            steps{
                script{
                    dir(java_dir){
                        withSonarQubeEnv(sonarEnv) {
                            sh "mvn sonar:sonar -Dsonar.dependencyCheck.reportPath=../../dependency-check-report.xml"
                        }
                    }
                }
            }
        }
        /*
        stage ('Deploy') {
            steps {
                //revisar tool jenkins docker
                //mejor imagenes con el Docker build
                sh 'echo Hola'
            }
        }
        */
    }
    
        
}
